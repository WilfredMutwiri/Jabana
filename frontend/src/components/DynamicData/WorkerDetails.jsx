import { useState,useEffect } from "react";
import { useParams } from "react-router-dom";
import {SERVER_URL} from '../../constants/SERVER_URL';
import logo from '../../assets/schoolLogo.webp';
import { Spinner } from "../spinner";
import {Button} from "flowbite-react";
import {jsPDF} from "jspdf";
import "jspdf-autotable";


const WorkerDetails=()=>{
    const {id}=useParams();
    const [worker,setWorker]=useState(null);
    const [loading,setIsLoading]=useState(true);
    const [error,setError]=useState(null);

    // download teacher data
    const downloadPDF=()=>{
        const doc=new jsPDF();
        doc.setFillColor(255,255,255);
        //header
        doc.setFontSize(18);
        doc.setFont("helvetica","bold");
        doc.text("DESTINYKERS HIGH SCHOOL",105,15,{align:"center"});

        doc.setFontSize(14);
        doc.setFont("helvetica","bold");
        doc.text("Worker's Demographic Details",105,25,{align:"center"});
        doc.setDrawColor(150,150,150);
        doc.line(10,30,300,30);
        //content
        doc.setFontSize(12);
        doc.setFont("helvetica","normal");
        doc.text(`Name :`,10,40);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.fullName}`,40,40);

        doc.setFont("helvetica","normal");
        doc.text(`Email :`,10,50);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.email}`,40,50);

        doc.setFont("helvetica","normal");
        doc.text(`Phone No:`,10,60);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.phoneNo}`,40,60);

        doc.setFont("helvetica","normal");
        doc.text(`Sex:`,10,70);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.sex}`,40,70);

        doc.setFont("helvetica","normal");
        doc.text(`Nationality:`,10,80);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.nationality}`,40,80);

        doc.setFont("helvetica","normal");
        doc.text(`National Id:`,10,90);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.nationalId}`,40,90);

        doc.setFont("helvetica","normal");
        doc.text(`Place of Birth:`,10,100);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.placeOfBirth}`,40,100);

        doc.setFont("helvetica","normal");
        doc.text(`Box Office:`,10,110);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.boxOffice}`,40,110);

        doc.setFont("helvetica","normal");
        doc.text(`Marital Status:`,10,120);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.maritalStatus}`,40,120);

        doc.setFont("helvetica","normal");
        doc.text(`Religion:`,10,130);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.religion}`,40,130);

        doc.setFont("helvetica","normal");
        doc.text(`Department:`,10,140);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.Department}`,40,140);

        doc.setFont("helvetica","normal");
        doc.text(`Employment Status:`,10,150);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.status}`,50,150);

        doc.setFont("helvetica","normal");
        doc.text(`Date of Birth:`,10,160);
        doc.setFont("helvetica","bold");
        doc.text(`${worker.createdAt}`,40,160);
        //footer
        doc.setFontSize(10);
        doc.setDrawColor(150,150,150);
        doc.line(10,30,300,30);
        doc.text(`Generated by SchoolSync | @ ${new Date().getFullYear()}`,105,290,{align:'center'});
        //save pdf
        doc.save(`${worker.fullName}_demographic_Details.pdf`);
    }

    useEffect(()=>{
        const fetchWorkerDetails=async()=>{
            try {
                const res=await fetch(`${SERVER_URL}/api/users/worker/${id}`);
                const data=await res.json();

                if(res.ok){
                    setWorker(data);
                }else{
                    throw new Error(data.message || "Error fetching Worker info");
                }
            } catch (error) {
                setError(error.message)
            }finally{
                setIsLoading(false);
            };
        };
        fetchWorkerDetails();
    },[id])

    if(loading) return (
        <div className="  w-80 mx-auto flex gap-4">
        <p>{<Spinner/>}</p>
        <p className="my-auto font-semibold text-cyan-700">Loading worker's details...</p>
        </div>
    )
    if(error) return <p className="text-red-600 text-center font-semibold">Error fetching worker's details!</p>

    return(
        <div>

            <div className="w-11/12 mx-auto bg-white">
            <div className="flex justify-center border border-cyan-300">
                <img src={logo} className="w-24 h-24"/>
                <h2 className="text-2xl font-semibold my-auto text-cyan-800">DESTINYKERS HIGH SCHOOL</h2>
            </div>
            <div>
            <p className="text-center font-semibold text-gray-900 mt-4">Worker Demography</p>
            <div className="flex justify-between p-3 gap-6 w-10/12 mx-auto mt-4">
            <div>
            <ul className="flex flex-col gap-4">
                    <li>Full Name: <span className="demographyLi">{worker.fullName}</span></li>
                    <li>Email: <span className="demographyLi">{worker.email}</span></li>
                    <li>Mobile No: <span className="demographyLi">{worker.phoneNo}</span></li>
                    <li>Sex: <span className="demographyLi">{worker.sex}</span></li>
                    <li>National ID No: <span className="demographyLi">{worker.nationalId}</span></li>
                </ul>
            </div>
            <div>
            <ul className="flex flex-col gap-4">
                <li>Title : <span className="demographyLi">{worker.title}</span></li>
                <li>Work ID: <span className="demographyLi">{worker.workerId}</span></li>
                <li>Place Of Birth: <span className="demographyLi">{worker.placeOfBirth}</span></li>
                <li>Current Address : <span className="demographyLi">{worker.boxOffice}</span></li>
                <li>Nationality: <span className="demographyLi">{worker.nationality}</span></li>
            </ul>
            </div>
            <div>
            <ul className="flex flex-col gap-4">
                <li>Marital Status: <span className="demographyLi">{worker.maritalStatus}</span></li>
                <li>Religion: <span className="demographyLi">{worker.religion}</span></li>
                <li>Department : <span className="demographyLi">{worker.Department}</span></li>
                <li>Status: <span className="demographyLi">{worker.status}</span></li>
                <li>Birth Date: <span className="demographyLi">{worker.createdAt}</span></li>
            </ul>
            </div>
            </div>
            <div className="w-10/12 mx-auto pt-4 flex gap-6">
                <Button onClick={()=>(downloadPDF())}>Download</Button>
                <Button>Update</Button>
                <Button className="bg-red-700">Delete</Button>
            </div>
            </div>
            </div>
        </div>
    )
}

export default WorkerDetails;
